pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- snowman
-- @aquova

function _init()
 -- generate persistent data, additional menu options
 cartdata("aquova_snowman")
 menuitem(2,"main menu",return_2_title)
 menuitem(3,"level select",return_2_lvlselect)

 screen=128
 reset_time=30 -- frames held before reset

 -- game variables
 max_unlocked=1
 load_data()
 level_snow=0
 game_over=false
 reset_frames=0

 -- level transition variables
 transition=false
 trans_down=true
 instructions=false
 restarting=false
 trans_y=-100

 -- title screen variables
 instr_ptr=1
 title_ptr=0
 snowflakes={}

 -- level select values
 lvl_margin={x=9,y=22}
 box_size=22
 row_num=(screen-2*lvl_margin.x)/box_size
 lvl_ptr=0

 board={}
 p1={} -- in board coords
 margin={}

 -- set transparent colors
 palt(0,false)
 palt(14,true)

 -- generate title screen particles
 create_snow()
 _upd=update_title
 _drw=draw_title
end

function _update()
 _upd()
end

function _draw()
 _drw()
end

-- menu item functions
function return_2_title()
 _upd=update_title
 _drw=draw_title
end

function return_2_lvlselect()
 lvl_ptr=0
 _upd=update_lvlselect
 _drw=draw_lvlselect
end
-->8
-- title screen / lvl select

function update_title()
 -- if viewing instructions
 if instructions then
  -- lower/raise page into view
  if trans_down then
   trans_y=min(0,trans_y+5)
  else
   trans_y=max(-100,trans_y-5)
   if trans_y==-100 then
    trans_down=true
    instr_ptr=1
    instructions=false
   end
  end

  -- instruction page navigation
  if trans_y==0 then
   if btnp(‚ùé) then
    trans_down=false
   elseif btnp(üÖæÔ∏è) or btnp(‚û°Ô∏è) then
    instr_ptr+=1
    if instr_ptr>4 then
     trans_down=false
    end
   elseif btnp(‚¨ÖÔ∏è) then
    instr_ptr=max(1,instr_ptr-1)
   end
  end
 else
  if btnp(üÖæÔ∏è) then
   if title_ptr==0 then
    level=1
    init_level(level)
    _upd=update_main
    _drw=draw_main
    sfx(0)
   elseif title_ptr==1 then
    _upd=update_lvlselect
    _drw=draw_lvlselect
    sfx(2)
   else
    instructions=true
   end
  end

  if btnp(‚¨ÜÔ∏è) then
   title_ptr=(title_ptr-1)%3
   sfx(3)
  elseif btnp(‚¨áÔ∏è) then
   title_ptr=(title_ptr+1)%3
   sfx(3)
  end
 end

 for s in all(snowflakes) do
  s:update()
  if s.y > screen then
   del(snowflakes,s)
   local new_x=flr(rnd(screen))
   add(snowflakes,new_snowflake(new_x,0))
  end
 end
end

function draw_title()
 cls(6)

 for s in all(snowflakes) do
  s:draw()
 end

 spr(32,20,20,11,3)
 printb("by aquova",70,42,7,0)
 printb("start game",25,screen/2,7,0)
 printb("level select",25,screen/2+10,7,0)
 printb("instructions",25,screen/2+20,7,0)
 printb("üÖæÔ∏è",14,screen/2+10*title_ptr,12,0)
 circfill(screen/2,3*screen,2.25*screen,7)
 spr(17,90,90,2,1)
 spr(16,105,92)

 for i,hs in pairs(high_scores) do
  if hs==get_max_score(i) then
   spr(21,i*6-3,110+cos(i/2))
  end
 end

 if instructions then
  draw_instructions(0,trans_y)
 end
end

function update_lvlselect()
 local max_lvl=max_level()

 -- if level is chosen, update variables
 if btnp(üÖæÔ∏è) then
  if lvl_ptr < max_lvl then
   level=lvl_ptr+1
   trans_y=-100
   trans_down=true
   transition=false
   restarting=false
   level_snow=0
   init_level(level)
   _upd=update_main
   _drw=draw_main
   sfx(0)
  end
 elseif btnp(‚ùé) then
  _upd=update_title
  _drw=draw_title
  sfx(2)
 elseif btnp(‚¨ÖÔ∏è) then
  lvl_ptr=max(0,lvl_ptr-1)
  sfx(3)
 elseif btnp(‚û°Ô∏è) then
  lvl_ptr=min(min(lvl_ptr+1,max_unlocked-1),max_level()-1)
  sfx(3)
 elseif btnp(‚¨ÜÔ∏è) then
  lvl_ptr=(lvl_ptr-row_num<0) and lvl_ptr or (lvl_ptr-row_num)
  sfx(3)
 elseif btnp(‚¨áÔ∏è) then
  lvl_ptr=(lvl_ptr+row_num>=max_unlocked) and lvl_ptr or min(lvl_ptr+row_num,max_level()-1)
  sfx(3)
 end

 for s in all(snowflakes) do
  s:update()
  if s.y > screen then
   del(snowflakes,s)
   local new_x=flr(rnd(screen))
   add(snowflakes,new_snowflake(new_x,0))
  end
 end
end

function draw_lvlselect()
 cls(6)

 for s in all(snowflakes) do
  s:draw()
 end

 printbc("level select",10,7,0)
 for lvl=0,max_level()-1 do
  local x=lvl_margin.x+box_size*(lvl%row_num)
  local y=lvl_margin.y+box_size*flr(lvl/row_num)
  rectfill(x,y,x+box_size-1,y+box_size-1,6)

  if lvl+1 > max_unlocked then
   fillp(0xa5a5.8)
   rectfill(x,y,x+box_size-1,y+box_size-1,5)
   fillp()
  else
   local high=high_scores[lvl+1]
   local lvl_max=get_max_score(lvl+1)
   local pen_color=(high==lvl_max) and 9 or 8
   printb(high,x+ctext(""..high,x,x+box_size),y+3,pen_color,0)
   line(x+3,y+10,x+box_size-4,y+10,0)
   printb(lvl_max,x+ctext(""..lvl_max,x,x+box_size),y+14,pen_color,0)
  end

  rect(x,y,x+box_size-1,y+box_size-1,0)
 end

 local ptr_x=lvl_margin.x+box_size*(lvl_ptr%row_num)
 local ptr_y=lvl_margin.y+box_size*flr(lvl_ptr/row_num)
 rect(ptr_x,ptr_y,ptr_x+box_size-1,ptr_y+box_size-1,11)

 local back_txt="üÖæÔ∏è select ‚ùé back"
 printb(back_txt,ctext(back_txt,0,screen)-2,screen-10,7,0)
 printb("‚ùé",72,screen-10,8,0)
 printb("üÖæÔ∏è",32,screen-10,12,0)
end

function create_snow()
 snowflakes={}
 for _=1,50 do
  local x=flr(rnd(screen))
  local y=flr(rnd(screen))
  add(snowflakes,new_snowflake(x,y))
 end
end
-->8
-- main game

function update_main()
 if transition then
  if trans_down then
   trans_y=min(0,trans_y+5)
  else
   trans_y=max(-100,trans_y-5)
   if trans_y==-100 then
    transition=false
    trans_down=true
    level_snow=0
   end
  end

  if trans_y==0 then
   if btnp(üÖæÔ∏è) then
    if level==max_level() then
     _upd=update_title
     _drw=draw_title
     return
    end
    trans_down=false
    restarting=false
    level+=1
    init_level(level)
   elseif btnp(‚ùé) then
    trans_down=false
    restarting=true
    init_level(level)
   end
  end
  return
 end

 -- reset level if ‚ùé held
 if btn(‚ùé) then
  reset_frames+=1
  if reset_frames==reset_time then
   reset_frames=0
   level_snow=0
   init_level(level)
  end
  return
 end

 reset_frames=0
 local startx,starty=p1.x,p1.y
 main_input()
 update_board()

 if not remaining_moves() or game_over then
  transition=true
  high_scores[level]=max(high_scores[level],level_snow)
  max_unlocked=max(max_unlocked,level+1)
  save_game()
 end
end

function main_input()
 -- store initial position
 local startx,starty=p1.x,p1.y
 local valid_tiles={1,4,5}

 -- behavior on ice
 -- since cracked ice turns immediately broken, check 6 rather than 5
 if (board[p1.y][p1.x]==4 or board[p1.y][p1.x]==6) and p1.d~="n" then
  -- for each orientation,
  -- first check if on edge, if so make neutral and stop
  -- then check if going to run into invalid tile
  if p1.d=="u" then
   if p1.y==1 then
    p1.d="n"
   elseif board[p1.y-1][p1.x]==2 or board[p1.y-1][p1.x]==6 then
    p1.y-=1
    game_over=true
   elseif board[p1.y-1][p1.x]==3 then
    p1.d="n"
   else
    p1.y-=1
   end
  elseif p1.d=="d" then
   if p1.y==#board then
    p1.d="n"
   elseif board[p1.y+1][p1.x]==2 or board[p1.y+1][p1.x]==6 then
    p1.y+=1
    game_over=true
   elseif board[p1.y+1][p1.x]==3 then
    p1.d="n"
   else
    p1.y+=1
   end
  elseif p1.d=="l" then
   if p1.x==1 then
    p1.d="n"
   elseif board[p1.y][p1.x-1]==2 or board[p1.y][p1.x-1]==6 then
    p1.x-=1
    game_over=true
   elseif board[p1.y][p1.x-1]==3 then
    p1.d="n"
   else
    p1.x-=1
   end
  elseif p1.d=="r" then
   if p1.x==#board[1] then
    p1.d="n"
   elseif board[p1.y][p1.x+1]==2 or board[p1.y][p1.x+1]==6 then
    p1.x+=1
    game_over=true
   elseif board[p1.y][p1.x+1]==3 then
    p1.d="n"
   else
    p1.x+=1
   end
  end
  return
 end

 if btnp(‚¨ÖÔ∏è) then
  p1.x=max(1,p1.x-1)
  p1.d="l"
 elseif btnp(‚û°Ô∏è) then
  p1.x=min(p1.x+1,#board[1])
  p1.d="r"
 elseif btnp(‚¨ÜÔ∏è) then
  p1.y=max(1,p1.y-1)
  p1.d="u"
 elseif btnp(‚¨áÔ∏è) then
  p1.y=min(p1.y+1,#board)
  p1.d="d"
 end

 -- if move would move off snow, don't move
 if not contains(valid_tiles,board[p1.y][p1.x]) then
  p1.x,p1.y=startx,starty
 end
end

function update_board()
 if board[p1.y][p1.x]==1 then
  board[p1.y][p1.x]=2
  level_snow+=1
  sfx(1)
 elseif board[p1.y][p1.x]==5 then
  board[p1.y][p1.x]=6
  sfx(4)
 end
end

function remaining_moves()
 -- implement breadth-first search
 local q={} -- queue
 local v={} -- visited
 add(q,{p1.x,p1.y})
 add(v,{p1.x,p1.y})

 while #q~=0 do
  local val=pop(q)

  local neighbors=calc_neighbors(val)
  for n in all(neighbors) do
   if not contains(v,n) then
    if board[n[2]][n[1]]==1 then
     return true
    end
    -- only add ice to queue
    if (board[n[2]][n[1]]==4 or board[n[2]][n[1]]==5) then
     add(q,n)
    end
    add(v,n)
   end
  end
 end
 return false
end
-->8
-- levels

-- level values:
-- these match up with sprite numbers
-- 1 - snow
-- 2 - grass
-- 3 - rock
-- 4 - ice
-- 5 - cracked ice
-- 6 - broken ice
_levels={
 { -- 1
 {1,1,1,1,1},
 {1,1,1,1,1},
 {1,1,2,1,1},
 {1,1,1,1,1},
 {1,1,1,1,1}
},
{ -- 2
{3,1,1,1,1,1,1,3},
{1,1,1,1,1,1,1,1},
{1,1,1,2,1,1,1,1},
{1,1,1,1,1,1,1,1},
{1,1,1,1,1,1,1,1},
{3,1,1,1,1,1,1,3},
 },
 { -- 3
 {2,1,1,1,1},
 {1,1,1,1,1},
 {1,1,3,1,1},
 {1,1,3,1,1},
 {1,1,3,1,1},
 {1,1,1,1,1},
 {1,1,1,1,1},
},
{ -- 4
{2,1,1,1,1},
{1,3,1,1,1},
{1,1,1,1,1},
{1,1,1,1,1},
{1,1,1,1,1}
 },
 { -- 5
 {3,3,1,1,1,3,3},
 {3,1,1,3,1,1,3},
 {1,1,1,1,1,1,1},
 {1,3,1,2,1,3,1},
 {1,1,1,1,1,1,1},
 {3,1,1,3,1,1,3},
 {3,3,1,1,1,3,3},
},
{ -- 6
{1,1,3,3,3,3,3},
{1,2,1,4,4,4,1},
{1,1,1,3,3,3,3}
 },
 { -- 7
 {1,4,4,1,4,4,1},
 {4,4,4,4,4,4,4},
 {1,4,4,2,4,4,1},
 {1,4,4,1,4,4,1},
 {1,4,4,4,4,4,1},
 {4,4,4,4,4,4,4},
 {1,1,1,1,1,1,1}
},
{ -- 8
{1,1,1,1,1},
{1,4,1,4,1},
{1,4,1,4,1},
{1,4,2,4,1},
{1,1,4,1,1},
{1,4,1,4,1},
{1,4,1,4,1},
{1,4,1,4,1},
{1,1,1,1,1}
 },
 { -- 9
 {1,1,1,1,1,2},
 {1,3,3,1,1,1},
 {1,3,1,1,1,1},
 {1,1,1,1,1,1},
 {1,1,1,1,3,1},
 {1,1,1,3,3,1},
 {1,1,1,1,1,1}
},
{ -- 10
{3,4,4,4,4},
{4,4,4,4,3},
{4,4,2,4,4},
{4,1,4,4,4},
{4,4,4,1,4},
{4,4,4,4,4},
 },
 { -- 11
 {4,1,4,1,4,1,4},
 {1,4,1,4,1,4,1},
 {4,1,4,1,4,1,4},
 {1,4,1,2,1,4,1},
 {4,1,4,1,4,1,4},
 {1,4,1,4,1,4,1},
 {4,1,4,1,4,1,4}
},
{ -- 12
{4,1,3,4,4,4,4,4,4},
{4,3,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,3,4},
{3,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,3,4,4},
{4,4,4,4,1,4,4,4,3},
{4,3,4,4,4,4,4,4,4},
{4,4,4,4,4,3,4,4,4},
{4,4,4,4,4,4,4,4,2}
 },
 { -- 13
 {1,4,4,4,5,5,1},
 {3,3,3,4,3,3,3},
 {2,2,3,2,3,2,2}
},
{ -- 14
{4,1,4,3,4,1,4},
{1,4,1,3,1,4,1},
{4,1,4,3,4,1,4},
{2,4,1,5,1,4,1},
{4,1,4,3,4,1,4},
{1,4,1,3,1,4,1},
{4,1,4,3,4,1,4}
 },
 { -- 15
 {2,1,1,4,1,4,1,4,1},
 {1,3,4,3,4,3,4,3,4},
 {1,4,5,4,1,4,5,4,1},
 {4,3,4,3,1,3,4,3,4},
 {1,4,1,1,4,1,1,4,1},
 {4,3,4,3,1,3,4,3,4},
 {1,4,5,4,1,4,5,4,1},
 {4,3,4,3,4,3,4,3,4},
 {1,4,1,4,1,4,1,4,1},
},
{ -- 16
{4,4,4,2,4,4,4},
{5,3,3,5,3,3,5},
{5,3,3,5,3,3,5},
{1,5,5,1,3,3,5},
{5,3,3,1,5,5,1},
{5,3,3,5,3,3,3},
{1,5,5,1,3,3,3},
{5,3,3,5,3,3,3},
{1,5,5,1,3,3,3}
 },
 { -- 17
 {5,5,5,5,5},
 {5,1,5,1,5},
 {5,1,5,1,5},
 {5,5,5,5,5},
 {1,5,5,5,1},
 {5,1,2,1,5}
},
{ -- 18
{1,1,1,5,1,1,1},
{1,1,1,3,1,1,1},
{1,1,1,3,1,1,1},
{5,3,1,2,1,3,5},
{1,1,1,1,1,1,1},
{1,1,1,3,1,1,1},
{1,1,1,5,1,1,1}
 },
 { -- 19
 {1,1,1,1,1,1,1,1,1,1,1},
 {1,1,5,1,3,3,3,3,1,1,1},
 {1,1,3,1,3,1,1,1,3,5,1},
 {5,3,1,1,3,1,1,1,1,1,1},
 {5,3,1,1,1,1,1,3,3,3,5},
 {5,3,1,1,1,4,1,1,1,3,5},
 {5,3,3,3,1,1,1,1,1,3,5},
 {1,1,1,1,1,1,3,1,1,3,5},
 {1,5,3,1,1,1,3,1,3,1,1},
 {1,1,1,3,3,3,3,1,5,1,1},
 {1,1,1,1,1,1,1,1,1,1,1}
},
{ -- 20
{5,5,5,5,1,1,5,5,5,5},
{5,3,5,5,1,1,5,5,3,5},
{5,5,1,1,4,4,1,1,5,5},
{5,5,1,1,4,4,1,1,5,5},
{1,1,4,4,2,1,4,4,1,1},
{1,1,4,4,1,1,4,4,1,1},
{5,5,1,1,4,4,1,1,5,5},
{5,5,1,1,4,4,1,1,5,5},
{5,3,5,5,1,1,5,5,3,5},
{5,5,5,5,1,1,5,5,5,5}
 }
}

_meta_levels={
 -- top score, start x, start y
 {24,3,3},
 {43,4,3},
 {31,1,1},
 {23,1,1},
 {32,4,4},
 {8,2,2},
 {17,4,3},
 {31,3,4},
 {35,6,1},
 {2,3,3},
 {24,4,4},
 {2,9,9},
 {2,4,3},
 {19,1,4},
 {25,1,1},
 {8,4,1},
 {8,3,6},
 {39,4,4},
 {80,6,6},
 {35,5,5}
}

function get_level(val)
 return _levels[val]
end

function get_max_score(val)
 return _meta_levels[val][1]
end

function max_level()
 return #_levels
end

function init_level(val)
 -- if val==level then
 --  restarting=true
 -- else
 --  restarting=false
 -- end
 game_over=false
 board=copy_lvl(get_level(val))
 p1.x=_meta_levels[val][2]
 p1.y=_meta_levels[val][3]
 p1.d="n" -- neutral direction
 calc_margin(val)
end

function calc_margin(val)
 local current_board=get_level(val)
 margin.x=8*ceil((screen/8-#current_board[1])/2-1)
 margin.y=8*ceil((screen/8-#current_board)/2-1)
end

-- makes a deep copy of src into tar
-- this is assuming a 2d array
function copy_lvl(_src)
 local _tar={}
 for row=1,#_src do
  _tar[row]={}
  for col=1,#_src[row] do
   _tar[row][col]=_src[row][col]
  end
 end
 return _tar
end
-->8
-- drawing

function draw_main()
 cls(7)

 draw_border()
 draw_board()
 draw_bar()
 printb("ÏõÉ",margin.x+8*p1.x+1,margin.y+8*p1.y+1,12,0)

 if transition then
  draw_transition(0,trans_y)
 end

 -- resetting level
 if reset_frames > 5 then
  printbc("hold ‚ùé to reset",screen/2-10,7,0)
  printb("‚ùé",54,screen/2-10,8,0)
  rectfill(screen/5,screen/2,4*screen/5,screen/2+10,8)
  local bar_width=(reset_frames/reset_time)*3*screen/5
  rectfill(screen/5+1,screen/2+1,screen/5+bar_width+1,screen/2+9,9)
 end
end

function draw_board()
 for y=1,#board do
  for x=1,#board[y] do
   spr(board[y][x],margin.x+8*x,margin.y+8*y)
  end
 end
end

function draw_border()
 for x=0,screen/8-1 do
  for y=0,screen/8-1 do
   spr(16,8*x,8*y)
  end
 end
end

function draw_bar()
 rectfill(0,0,screen,8,5)
 print("level: "..level,2,2,6)
 local size=trans_down and level_snow or 0
 printr("size: "..size,2,6)
end

function draw_transition(_x,_y)
 local lvl=0
 if trans_down or restarting then
  lvl=level
 else
  lvl=level-1
 end

 local lvl_max=get_max_score(lvl)
 rectfill(_x+15,_y+15,_x+screen-15,_y+screen-15,1)
 rectfill(_x+20,_y+20,_x+screen-20,_y+screen-20,6)
 printbc("level: "..lvl,_y+24,8,0)
 line(_x+25,_y+32,_x+screen-25,_y+32,0)
 printbc("snowman size: "..level_snow,_y+40,7,0)
 printbc("possible max: "..lvl_max,_y+50,7,0)
 if level_snow==lvl_max then
  sspr(24,16,13,19,_x+screen/2-6,_y+60)
  printbc("perfect score!",_y+82,9,0)
 else
  printbc("no more moves!",_y+82,8,0)
 end

 printbc("üÖæÔ∏è next level",_y+screen-36,7)
 printb("üÖæÔ∏è",_x+40,_y+screen-36,12,0)
 printbc("‚ùé restart",_y+screen-28,7)
 printb("‚ùé",_x+46,_y+screen-28,8,0)
end

function new_snowflake(_x,_y)
 local s={x=_x,y=_y,ang=rnd(1),spd=rnd(0.5)+0.5}

 s.update=function(this)
  s.y+=s.spd
  s.ang+=0.05
 end

 s.draw=function(this)
  circfill(s.x+sin(s.ang),s.y,1,7)
 end

 return s
end

function draw_instructions(_x,_y)
 rectfill(_x+15,_y+15,_x+screen-15,_y+screen-15,1)
 rectfill(_x+20,_y+20,_x+screen-20,_y+screen-20,6)
 printbc("instructions",_y+24,8,0)
 line(_x+25,_y+32,_x+screen-25,_y+32,0)

 if instr_ptr==1 then
  printbc("try to build the",_y+36,7,0)
  printbc("biggest snowman!",_y+42,7,0)
  printbc("collect snow while",_y+54,7,0)
  printbc("avoiding grass.",_y+60,7,0)

  spr(1,_x+40,_y+76)
  spr(20,_x+40,_y+76)
  spr(2,_x+screen-48,_y+76)
  spr(19,_x+screen-48,_y+76)
 elseif instr_ptr==2 then
  printbc("watch out for",_y+40,7,0)
  printbc("rocks, they won't",_y+46,7,0)
  printbc("let you pass.",_y+52,7,0)

  spr(3,_x+60,_y+76)
 elseif instr_ptr==3 then
  printbc("you will slide",_y+40,7,0)
  printbc("across ice!",_y+46,7,0)
  printbc("some ice is",_y+56,7,0)
  printbc("cracked. watch out!",_y+62,7,0)

  spr(4,_x+40,_y+76)
  spr(5,_x+60,_y+76)
  spr(6,_x+screen-48,_y+76)
 else
  printbc("try to beat",_y+40,7,0)
  printbc("every level.",_y+46,7,0)
  printbc("have fun!",_y+56,7,0)

  sspr(24,16,13,19,_x+screen/2-6,_y+70)
 end

 printb("‚û°Ô∏è",_x+screen-30,_y+screen-30,7,0)

 -- if there are previous pages, show left arrow
 if instr_ptr>1 then
  printb("‚¨ÖÔ∏è",_x+24,_y+screen-30,7,0)
 end
end

-->8
-- utilities

-- calcs x for centering text between two values
function ctext(_t,_x1,_x2)
 return ((_x2-_x1)/2)-#_t*2
end

-- prints text to center of screen
function printc(_t,_y,_c)
 print(_t,ctext(_t,0,screen),_y,_c)
end

-- prints right aligned text
function printr(_t,_y,_c)
 local _x=screen-#_t*4-1
 print(_t,_x,_y,_c)
end

-- prints text with a border
function printb(_t,_x,_y,_cinner,_couter)
 for i=-1,1 do
  for j=-1,1 do
   print(_t,_x+i,_y+j,_couter)
  end
 end

 print(_t,_x,_y,_cinner)
end

-- print both with a border and centered
function printbc(_t,_y,_cinner,_couter)
 local x=ctext(_t,0,screen)
 printb(_t,x,_y,_cinner,_couter)
end

-- checks if a table contains an element
function contains(_tbl,_e)
 for item in all(_tbl) do
  if type(item)=="table" then
   local all_matches=true
   for i=1,#item do
    if _e[i]~=item[i] then
     all_matches=false
     break
    end
   end
   if all_matches then return true end
  else
   if item==_e then
    return true
   end
  end
 end
 return false
end

-- pop element off queue-like table
function pop(_tbl)
 local val=_tbl[1]
 del(_tbl,val)
 return val
end

-- assuming _p is a table of {x,y}
function calc_neighbors(_p)
 local n={}

 -- what a 'meh' way to do this
 local dirs={{0,1},{0,-1},{-1,0},{1,0}}
 for i in all(dirs) do
  local x=mid(1,_p[1]+i[1],#board[1])
  local y=mid(1,_p[2]+i[2],#board)

  -- don't add original point to neighbor list
  if (x~=_p[1]) or (y~=_p[2]) then
   add(n,{x,y})
  end
 end

 return n
end
-->8
-- saving local data

function save_game()
 -- save data format
 -- 0 - number of unlocked levels (default to 1)
 -- 1-#levels - player score of respective level
 dset(0,max_unlocked)
 for i,v in pairs(high_scores) do
  dset(i,v)
 end
end

function load_data()
 -- if unitialized
 if dget(0)==0 then
  reset_data()
 else
  max_unlocked=dget(0)
  high_scores={}
  for i=1,max_level() do
   add(high_scores,dget(i))
  end
 end
end

function reset_data()
 dset(0,1)
 high_scores={}
 for i=1,20 do
  add(high_scores,0)
  dset(i,0)
 end
end
__gfx__
0000000077777777bbb7bb3b77777777cccccccccccccccccccccccc000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777777bbbb3bb77000777c7cccc7cc7c1cc7cc711cc7c000000000000000000000000000000000000000000000000000000000000000000000000
00700700777777777b3bb3bb70777077ccccc7cccc1cc1ccc11111cc000000000000000000000000000000000000000000000000000000000000000000000000
0007700077777777b3bbbbbb04444707ccccccccc1cc1c1cc111111c000000000000000000000000000000000000000000000000000000000000000000000000
0007700077777777b3bbb3bb04444440cccccccccc1ccccccc11111c000000000000000000000000000000000000000000000000000000000000000000000000
0070070077777777bb7b37bb04444440cc7cccccc1ccc1ccc11111cc000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777777bbb37bb70000007c7cccc7cc7c1cc1cc7111c1c000000000000000000000000000000000000000000000000000000000000000000000000
0000000077777777bbbbbbbb77777777cccccccccccccccccccccccc000000000000000000000000000000000000000000000000000000000000000000000000
eee33eeeeee77777777eeeeeeeeeeeeeeeeeeeeeeee55eee00000000000000000000000000000000000000000000000000000000000000000000000000000000
ee3333eeee5555555557eeeee8eeee8eeeeeeebeee5775ee00000000000000000000000000000000000000000000000000000000000000000000000000000000
e333333ee111111111117eeeee8ee8eeeeeeebeeee5775ee00000000000000000000000000000000000000000000000000000000000000000000000000000000
3333333355555555555557eeeee88eeeeeeeebeeee5555ee00000000000000000000000000000000000000000000000000000000000000000000000000000000
ee3333eeeedddddddeefeeeeeee88eeeeeeebeeee577775e00000000000000000000000000000000000000000000000000000000000000000000000000000000
e333333eee8558448eefeeeeee8ee8eeeebebeeee577775e00000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333eed55d44deefeeeee8eeee8eeeebeeeee577775e00000000000000000000000000000000000000000000000000000000000000000000000000000000
eee44eeeee8888448eefeeeeeeeeeeeeeeeeeeeeee5555ee00000000000000000000000000000000000000000000000000000000000000000000000000000000
eeee00000eeeeeeeeeeeeeeeeeeee000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
ee007777700eeeeeeeeeeeeeeeee07770eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
e07777777770eeeeeeeeeeeeeee0777770eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
e077777777760eeeeeeeeeeeee070770760eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
0777700077760eeeeeeeeeeeee077777760eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
07770eee00660eeeeeeeeeeeee079977760eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
07770eeeee00eeeeeeeeeeeeeee0777760eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
0777700eeeeeeeeeeeeeeeeeeee0066600eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
e07777700eeeeeeeeeeeeeeeee007000700eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
ee007777700eeeeeeeeeeeeee07777777770eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
eeee00777770ee000e000eeee07770777770eee00eee0eee00ee000e00e0000eeeee000000eee000e000eeee0000000000000000000000000000000000000000
eeeeee0077760e07707770ee0777777777760e0770e070e0770e077077077770eee07777770ee07707770eee0000000000000000000000000000000000000000
e00eeeee07760e077777770e0777707777760e0770e070e0760e0777777777770e0776007770e077777770ee0000000000000000000000000000000000000000
07700eee07760e077607760e0777777777760e0770e070e0760e0776077607760e0770ee0760e077607760ee0000000000000000000000000000000000000000
0777700077760e0760e0760e0777707777760e0770e070e0760e0760e070e0760e0770ee0760e0760e0760ee0000000000000000000000000000000000000000
077777777760ee0760e0760ee07777777760ee0777077707760e0760e060e0760e0777007760e0760e0760ee0000000000000000000000000000000000000000
e07777777660ee0760e0760ee07777777660ee0777776777660e0760e060e0760ee077777760e0760e0760ee0000000000000000000000000000000000000000
ee006666600eee0660e0660eee006666600eeee06666066660ee0660e060e0660eee06660660e0660e0660ee0000000000000000000000000000000000000000
eeee00000eeeeee00eee00eeeeee00000eeeeeee0000e0000eeee00eee0eee00eeeee000e000ee00eee00eee0000000000000000000000000000000000000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000
__label__
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666667666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666677766666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666667666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666667666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666667666666667677766666666666666666666666666666666666676666666666666666666666666666666
66666666666666666666666666666666666666666666677766666677767666666666666666666666666666666666666777666666666766666666666666666666
66666666666666666666666666666666666666666666667666666667666666666666666666666666666666666666666676666666667776666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666766666666666666666666
66666666666666666666666666666666666666667666666666676666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666677766666666777666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666667666666666676666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666676666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666777666666666666666666666666666666666666666666666666666666666666666666666666
76666666666666666666666666666666666666666666666666666676666666666666666666666666666666666666666666666666666666666666666666666666
77666666666666666666666666666666766666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
76666666666666666666666666666667776666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666600000666766666666666666660006666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666660077777006666666666666666607770666666666666666666666666667666666666666666666666666666666666666666666666666
66666666666666666666607777777770666666666666666077777066666666666666666666666677766666666666666666666666666666666666666666666666
66666666666666666666607777777776066666666666660707707606666666666666666666666667666666666666666666666666666666666666666666666666
66666666666666666666077770007776066666666666660777777606666666666666766666666666666666666666666666666666666666666666666666666666
66666666666666666666077706660066066666666666660799777606666666666667776666666666666666666666666666666666666666666666666666666666
66666666666666666666077706666600666666666666666077776066666666666666766666666666666666666666666666666666666666666666666666666666
66666666666666666666077770066666666666666666666006660066666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666607777700666666666666666660070007006666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666660077777006666666666666607777777770666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666600777770660006000666607770777770666006660666006600060060000666660000006660006000666666666666666666666666
66666666666666666666666666007776060770777066077777777776060770607060770607707707777066607777770660770777066666666666666666666666
66666666666666666666600666660776060777777706077770777776060770607060760607777777777706077600777060777777706666666666666666666666
66666666666666666666077006660776060776077606077777777776060770607060760607760776077606077066076060776077606666666666666666666666
66666666666666666666077770007776060760607606077770777776060770607060760607606070607606077066076060760607606666666666666666666666
66666666666666666666077777777760660760607606607777777760660777077707760607606060607606077700776060760607606666666666666666666666
66666666666666666666607777777660660760607606607777777660660777776777660607606060607606707777776060760607606666666666666666666666
66666666666666666666660066666006660660606606660066666006677066660666607706607060606606670666066060660606606666666666666666666666
66666666666666666666666600000666666006660066666600000666667600006000067660076606660066666000600066006660066666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66766666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666766666666666666666666
67776666666666666666666666666666666666666666666666666666666666666666600000000066600000000000000000000000007776666666666666666666
66766666666666666666666666666666666666666666666666666666666666666666607770707066607770070070700770707077706766666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666607070707066607070707070707070707070706666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666607700777066607770707070707070707077706666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666607070007066607070770070707070777070706666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666607770777066607070077007707700070070706666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666600000000066600000000000000006000000006666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666676666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666777666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666676766666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667776666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666766666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666667666666666666666666666666666666766666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666677766666666666666666666666666667776666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666667666666666666666666666666666666766666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666667666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666677766666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666667666666000000066660000000000000000000066660000000000000000666666666666666666666666666666666666666666666666666666666666666
666666666666600ccccc006600770777077707770777066600770777077707770666666666666666666666666666666666666666666666666666666666666666
66666666666660cc000cc06607000070070707070070066607000707077707000666666666666666666666666666666666666666666666666666666666666666
66666666666660cc0c0cc06607770070077707700070666607000777070707706666666666666666666666666666666666666666666676666666666666666666
66666666666660cc000cc06600070070070707070070666607070707070707000666666666666666666666666666666666666666666777666666666666666666
666666666666600ccccc006607700070070707070070666607770707070707770666666666666666666666666666666666666666666676666666666666666666
66666666666666000000066600006000000000000000666600000000000000000666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
67666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
77766666666666666666666600060000000000000006666660000000000600000000000006666666666666666666666666666666666666666666666666666666
67666666666666666666666607060777070707770706666600770777070607770077077706666666666666666666666666666666666666666666666666666666
66666666666666666666666607060700070707000706666607000700070607000700007006666666666666666666666666666666666666666666666666666666
66666666666666666666666607060770070707700706666607770770070607700706607066666666666666666666666666666666666666666666666666666666
66666666666666666666666607000700077707000700066600070700070007000700007066666666666666666666666666666666666666666666666666666666
66666666666666666666666607770777007007770777066607700777077707770077007066666666666666666666666666666666666666666666666666666666
66666666666666666666666600000000000000000000066600000000000000000000000066666666666666666666666666666666666666666666666666676666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666777666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666676666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666600000000600000000000000000000000000000000000600006666666666666666666666666666666666666666666666666666666
66666666666666666666666607770770007707770777070700770777077700770770007706666666666666666666666666666666666666666666666666666666
66666666666666666666676600700707070000700707070707000070007007070707070006666666666667666666666666666666666666666666666666666666
66666666666666666666777660700707077700700770070707066070607007070707077706666666666677766666666666666666666666666666666666666666
66666666666666666666676600700707000700700707070707000070007007070707000706666666666667666666666666666666666666666666666666666666
66666666666666666666666607770707077000700707007700770070077707700707077006666666666666666666666666666666666666666666666666666666
66666666666666666666666600000000000060000000000000000000000000000000000066666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666677777777666666666666666666666666666
66666666666666676666666666666666666666666666666666666666666666666666666666666666666666666666555555555766666666666666666666666666
66666666666666777666666666666666666666666666666666666666666666666666666666666666666666666661111111111176666633666666666666666666
66666666666666676666666676666666666666666666666666666666666666666666666666666666666666666655555555555557666333366666666666666666
66666666666666666666666777666766666666666666666676666666666666666666666666666666666666666666ddddddd66f66663333336666666666666666
66666666666666666666666676767776666666666666666777666666666666666666666666666666666666666666855844866f66633333333666666666666666
66666666666666666666666667776766666666666666666677777777777777777777777777777777766666666666d55d44d66f66666333366666666666666666
66666666666666666666666666766666666777777777777777777777777777777777777777777777777777777777888844866f66663333336666666666666666
66666666666666666666666666677777777777777777777777777777777777777777777777777777777777777777777777777766633333333666666666666666
66666666666666666666777777777777777777777777777777777777777777777777777777777777777777777777777777777777777744666666666666666666
66666666666666777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777776666666666666
66666666777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777776666666
66667777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777666
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777

__sfx__
000400003005030050300502d0502d0502d050300503005030050350503505035050000000000000000000001d0001e0002000023000260002b0002f000000000000000000000000000000000000000000000000
000400000365403655000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300002505025050220502205022000220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000400001f15024150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200002d65023750176531f753266532a65330703197031c7031e703207032270324703297032b7032d70300703007030070300703007030070300703007030070300703007030070300703007030070300703
